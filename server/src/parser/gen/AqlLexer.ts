// Generated from Aql.g4 by ANTLR 4.6-SNAPSHOT


import { ATN } from 'antlr4ts/atn/ATN';
import { ATNDeserializer } from 'antlr4ts/atn/ATNDeserializer';
import { CharStream } from 'antlr4ts/CharStream';
import { Lexer } from 'antlr4ts/Lexer';
import { LexerATNSimulator } from 'antlr4ts/atn/LexerATNSimulator';
import { NotNull } from 'antlr4ts/Decorators';
import { Override } from 'antlr4ts/Decorators';
import { RuleContext } from 'antlr4ts/RuleContext';
import { Vocabulary } from 'antlr4ts/Vocabulary';
import { VocabularyImpl } from 'antlr4ts/VocabularyImpl';

import * as Utils from 'antlr4ts/misc/Utils';


export class AqlLexer extends Lexer {
	public static readonly SELECT=1;
	public static readonly FROM=2;
	public static readonly SINCE=3;
	public static readonly UNTIL=4;
	public static readonly AT=5;
	public static readonly WHERE=6;
	public static readonly TRUE=7;
	public static readonly FALSE=8;
	public static readonly TODAY=9;
	public static readonly YESTERDAY=10;
	public static readonly MONDAY=11;
	public static readonly TUESDAY=12;
	public static readonly WEDNESDAY=13;
	public static readonly THURSDAY=14;
	public static readonly FRIDAY=15;
	public static readonly SATURDAY=16;
	public static readonly SUNDAY=17;
	public static readonly COUNT=18;
	public static readonly MAX=19;
	public static readonly MIN=20;
	public static readonly SUM=21;
	public static readonly AVG=22;
	public static readonly AND=23;
	public static readonly OR=24;
	public static readonly IDENTIFIER=25;
	public static readonly INT=26;
	public static readonly STRING=27;
	public static readonly OPEN_PAREN=28;
	public static readonly CLOSE_PAREN=29;
	public static readonly STAR=30;
	public static readonly DIVIDE=31;
	public static readonly PLUS=32;
	public static readonly MINUS=33;
	public static readonly EQUAL=34;
	public static readonly NOT_EQUAL=35;
	public static readonly GREATER_THAN=36;
	public static readonly GREATER_THAN_EQUALS=37;
	public static readonly LESS_THAN=38;
	public static readonly LESS_THAN_EQUALS=39;
	public static readonly COMMA=40;
	public static readonly COMMENT=41;
	public static readonly WS=42;
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE"
	];

	public static readonly ruleNames: string[] = [
		"SELECT", "FROM", "SINCE", "UNTIL", "AT", "WHERE", "TRUE", "FALSE", "TODAY", 
		"YESTERDAY", "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY", 
		"SUNDAY", "COUNT", "MAX", "MIN", "SUM", "AVG", "AND", "OR", "IDENTIFIER", 
		"INT", "STRING", "OPEN_PAREN", "CLOSE_PAREN", "STAR", "DIVIDE", "PLUS", 
		"MINUS", "EQUAL", "NOT_EQUAL", "GREATER_THAN", "GREATER_THAN_EQUALS", 
		"LESS_THAN", "LESS_THAN_EQUALS", "COMMA", "COMMENT", "WS", "A", "B", "C", 
		"D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", 
		"R", "S", "T", "U", "V", "W", "X", "Y", "Z"
	];

	private static readonly _LITERAL_NAMES: (string | undefined)[] = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		"'true'", "'false'", undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		"'('", "')'", "'*'", "'/'", "'+'", "'-'", "'='", "'!='", "'>'", "'>='", 
		"'<'", "'<='", "','"
	];
	private static readonly _SYMBOLIC_NAMES: (string | undefined)[] = [
		undefined, "SELECT", "FROM", "SINCE", "UNTIL", "AT", "WHERE", "TRUE", 
		"FALSE", "TODAY", "YESTERDAY", "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", 
		"FRIDAY", "SATURDAY", "SUNDAY", "COUNT", "MAX", "MIN", "SUM", "AVG", "AND", 
		"OR", "IDENTIFIER", "INT", "STRING", "OPEN_PAREN", "CLOSE_PAREN", "STAR", 
		"DIVIDE", "PLUS", "MINUS", "EQUAL", "NOT_EQUAL", "GREATER_THAN", "GREATER_THAN_EQUALS", 
		"LESS_THAN", "LESS_THAN_EQUALS", "COMMA", "COMMENT", "WS"
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(AqlLexer._LITERAL_NAMES, AqlLexer._SYMBOLIC_NAMES, []);

	@Override
	@NotNull
	public get vocabulary(): Vocabulary {
		return AqlLexer.VOCABULARY;
	}


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(AqlLexer._ATN, this);
	}

	@Override
	public get grammarFileName(): string { return "Aql.g4"; }

	@Override
	public get ruleNames(): string[] { return AqlLexer.ruleNames; }

	@Override
	public get serializedATN(): string { return AqlLexer._serializedATN; }

	@Override
	public get modeNames(): string[] { return AqlLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uAF6F\u8320\u479D\uB75C\u4880\u1605\u191C\uAB37\x02,\u0192\b\x01"+
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06"+
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r"+
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t"+
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t"+
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t"+
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t"+
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04"+
		"+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x042\t2\x043\t3\x04"+
		"4\t4\x045\t5\x046\t6\x047\t7\x048\t8\x049\t9\x04:\t:\x04;\t;\x04<\t<\x04"+
		"=\t=\x04>\t>\x04?\t?\x04@\t@\x04A\tA\x04B\tB\x04C\tC\x04D\tD\x04E\tE\x03"+
		"\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03\x03\x03\x03\x03"+
		"\x03\x03\x03\x03\x03\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03"+
		"\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x06\x03\x06\x03\x06\x03"+
		"\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\b\x03\b\x03\b\x03\b\x03"+
		"\b\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\n\x03\n\x03\n\x03\n\x03\n\x03"+
		"\n\x03\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03\f\x03"+
		"\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03"+
		"\r\x03\r\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E"+
		"\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F"+
		"\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10"+
		"\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11"+
		"\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x13\x03\x13"+
		"\x03\x13\x03\x13\x03\x13\x03\x13\x03\x14\x03\x14\x03\x14\x03\x14\x03\x15"+
		"\x03\x15\x03\x15\x03\x15\x03\x16\x03\x16\x03\x16\x03\x16\x03\x17\x03\x17"+
		"\x03\x17\x03\x17\x03\x18\x03\x18\x03\x18\x03\x18\x03\x19\x03\x19\x03\x19"+
		"\x03\x1A\x03\x1A\x07\x1A\u0120\n\x1A\f\x1A\x0E\x1A\u0123\v\x1A\x03\x1B"+
		"\x06\x1B\u0126\n\x1B\r\x1B\x0E\x1B\u0127\x03\x1C\x03\x1C\x07\x1C\u012C"+
		"\n\x1C\f\x1C\x0E\x1C\u012F\v\x1C\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1E"+
		"\x03\x1E\x03\x1F\x03\x1F\x03 \x03 \x03!\x03!\x03\"\x03\"\x03#\x03#\x03"+
		"$\x03$\x03$\x03%\x03%\x03&\x03&\x03&\x03\'\x03\'\x03(\x03(\x03(\x03)\x03"+
		")\x03*\x03*\x03*\x03*\x07*\u0154\n*\f*\x0E*\u0157\v*\x03*\x03*\x03+\x03"+
		"+\x03+\x03+\x03,\x03,\x03-\x03-\x03.\x03.\x03/\x03/\x030\x030\x031\x03"+
		"1\x032\x032\x033\x033\x034\x034\x035\x035\x036\x036\x037\x037\x038\x03"+
		"8\x039\x039\x03:\x03:\x03;\x03;\x03<\x03<\x03=\x03=\x03>\x03>\x03?\x03"+
		"?\x03@\x03@\x03A\x03A\x03B\x03B\x03C\x03C\x03D\x03D\x03E\x03E\x02\x02"+
		"\x02F\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b"+
		"\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02"+
		"\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14\'\x02\x15)\x02"+
		"\x16+\x02\x17-\x02\x18/\x02\x191\x02\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02"+
		"\x1E;\x02\x1F=\x02 ?\x02!A\x02\"C\x02#E\x02$G\x02%I\x02&K\x02\'M\x02("+
		"O\x02)Q\x02*S\x02+U\x02,W\x02\x02Y\x02\x02[\x02\x02]\x02\x02_\x02\x02"+
		"a\x02\x02c\x02\x02e\x02\x02g\x02\x02i\x02\x02k\x02\x02m\x02\x02o\x02\x02"+
		"q\x02\x02s\x02\x02u\x02\x02w\x02\x02y\x02\x02{\x02\x02}\x02\x02\x7F\x02"+
		"\x02\x81\x02\x02\x83\x02\x02\x85\x02\x02\x87\x02\x02\x89\x02\x02\x03\x02"+
		"\"\x04\x02C\\c|\x06\x022;C\\aac|\x03\x022;\x05\x02\f\f\x0F\x0F))\x04\x02"+
		"\f\f\x0F\x0F\x04\x02\v\f\"\"\x04\x02CCcc\x04\x02DDdd\x04\x02EEee\x04\x02"+
		"FFff\x04\x02GGgg\x04\x02HHhh\x04\x02IIii\x04\x02JJjj\x04\x02KKkk\x04\x02"+
		"LLll\x04\x02MMmm\x04\x02NNnn\x04\x02OOoo\x04\x02PPpp\x04\x02QQqq\x04\x02"+
		"RRrr\x04\x02SSss\x04\x02TTtt\x04\x02UUuu\x04\x02VVvv\x04\x02WWww\x04\x02"+
		"XXxx\x04\x02YYyy\x04\x02ZZzz\x04\x02[[{{\x04\x02\\\\||\u017B\x02\x03\x03"+
		"\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03"+
		"\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02"+
		"\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02"+
		"\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02"+
		"\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02"+
		"\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02"+
		"\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03"+
		"\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02"+
		"\x02\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x02"+
		"=\x03\x02\x02\x02\x02?\x03\x02\x02\x02\x02A\x03\x02\x02\x02\x02C\x03\x02"+
		"\x02\x02\x02E\x03\x02\x02\x02\x02G\x03\x02\x02\x02\x02I\x03\x02\x02\x02"+
		"\x02K\x03\x02\x02\x02\x02M\x03\x02\x02\x02\x02O\x03\x02\x02\x02\x02Q\x03"+
		"\x02\x02\x02\x02S\x03\x02\x02\x02\x02U\x03\x02\x02\x02\x03\x8B\x03\x02"+
		"\x02\x02\x05\x92\x03\x02\x02\x02\x07\x97\x03\x02\x02\x02\t\x9D\x03\x02"+
		"\x02\x02\v\xA3\x03\x02\x02\x02\r\xA6\x03\x02\x02\x02\x0F\xAC\x03\x02\x02"+
		"\x02\x11\xB1\x03\x02\x02\x02\x13\xB7\x03\x02\x02\x02\x15\xBD\x03\x02\x02"+
		"\x02\x17\xC7\x03\x02\x02\x02\x19\xCE\x03\x02\x02\x02\x1B\xD6\x03\x02\x02"+
		"\x02\x1D\xE0\x03\x02\x02\x02\x1F\xE9\x03\x02\x02\x02!\xF0\x03\x02\x02"+
		"\x02#\xF9\x03\x02\x02\x02%\u0100\x03\x02\x02\x02\'\u0106\x03\x02\x02\x02"+
		")\u010A\x03\x02\x02\x02+\u010E\x03\x02\x02\x02-\u0112\x03\x02\x02\x02"+
		"/\u0116\x03\x02\x02\x021\u011A\x03\x02\x02\x023\u011D\x03\x02\x02\x02"+
		"5\u0125\x03\x02\x02\x027\u0129\x03\x02\x02\x029\u0132\x03\x02\x02\x02"+
		";\u0134\x03\x02\x02\x02=\u0136\x03\x02\x02\x02?\u0138\x03\x02\x02\x02"+
		"A\u013A\x03\x02\x02\x02C\u013C\x03\x02\x02\x02E\u013E\x03\x02\x02\x02"+
		"G\u0140\x03\x02\x02\x02I\u0143\x03\x02\x02\x02K\u0145\x03\x02\x02\x02"+
		"M\u0148\x03\x02\x02\x02O\u014A\x03\x02\x02\x02Q\u014D\x03\x02\x02\x02"+
		"S\u014F\x03\x02\x02\x02U\u015A\x03\x02\x02\x02W\u015E\x03\x02\x02\x02"+
		"Y\u0160\x03\x02\x02\x02[\u0162\x03\x02\x02\x02]\u0164\x03\x02\x02\x02"+
		"_\u0166\x03\x02\x02\x02a\u0168\x03\x02\x02\x02c\u016A\x03\x02\x02\x02"+
		"e\u016C\x03\x02\x02\x02g\u016E\x03\x02\x02\x02i\u0170\x03\x02\x02\x02"+
		"k\u0172\x03\x02\x02\x02m\u0174\x03\x02\x02\x02o\u0176\x03\x02\x02\x02"+
		"q\u0178\x03\x02\x02\x02s\u017A\x03\x02\x02\x02u\u017C\x03\x02\x02\x02"+
		"w\u017E\x03\x02\x02\x02y\u0180\x03\x02\x02\x02{\u0182\x03\x02\x02\x02"+
		"}\u0184\x03\x02\x02\x02\x7F\u0186\x03\x02\x02\x02\x81\u0188\x03\x02\x02"+
		"\x02\x83\u018A\x03\x02\x02\x02\x85\u018C\x03\x02\x02\x02\x87\u018E\x03"+
		"\x02\x02\x02\x89\u0190\x03\x02\x02\x02\x8B\x8C\x05{>\x02\x8C\x8D\x05_"+
		"0\x02\x8D\x8E\x05m7\x02\x8E\x8F\x05_0\x02\x8F\x90\x05[.\x02\x90\x91\x05"+
		"}?\x02\x91\x04\x03\x02\x02\x02\x92\x93\x05a1\x02\x93\x94\x05y=\x02\x94"+
		"\x95\x05s:\x02\x95\x96\x05o8\x02\x96\x06\x03\x02\x02\x02\x97\x98\x05{"+
		">\x02\x98\x99\x05g4\x02\x99\x9A\x05q9\x02\x9A\x9B\x05[.\x02\x9B\x9C\x05"+
		"_0\x02\x9C\b\x03\x02\x02\x02\x9D\x9E\x05\x7F@\x02\x9E\x9F\x05q9\x02\x9F"+
		"\xA0\x05}?\x02\xA0\xA1\x05g4\x02\xA1\xA2\x05m7\x02\xA2\n\x03\x02\x02\x02"+
		"\xA3\xA4\x05W,\x02\xA4\xA5\x05}?\x02\xA5\f\x03\x02\x02\x02\xA6\xA7\x05"+
		"\x83B\x02\xA7\xA8\x05e3\x02\xA8\xA9\x05_0\x02\xA9\xAA\x05y=\x02\xAA\xAB"+
		"\x05_0\x02\xAB\x0E\x03\x02\x02\x02\xAC\xAD\x07v\x02\x02\xAD\xAE\x07t\x02"+
		"\x02\xAE\xAF\x07w\x02\x02\xAF\xB0\x07g\x02\x02\xB0\x10\x03\x02\x02\x02"+
		"\xB1\xB2\x07h\x02\x02\xB2\xB3\x07c\x02\x02\xB3\xB4\x07n\x02\x02\xB4\xB5"+
		"\x07u\x02\x02\xB5\xB6\x07g\x02\x02\xB6\x12\x03\x02\x02\x02\xB7\xB8\x05"+
		"}?\x02\xB8\xB9\x05s:\x02\xB9\xBA\x05]/\x02\xBA\xBB\x05W,\x02\xBB\xBC\x05"+
		"\x87D\x02\xBC\x14\x03\x02\x02\x02\xBD\xBE\x05\x87D\x02\xBE\xBF\x05_0\x02"+
		"\xBF\xC0\x05{>\x02\xC0\xC1\x05}?\x02\xC1\xC2\x05_0\x02\xC2\xC3\x05y=\x02"+
		"\xC3\xC4\x05]/\x02\xC4\xC5\x05W,\x02\xC5\xC6\x05\x87D\x02\xC6\x16\x03"+
		"\x02\x02\x02\xC7\xC8\x05o8\x02\xC8\xC9\x05s:\x02\xC9\xCA\x05q9\x02\xCA"+
		"\xCB\x05]/\x02\xCB\xCC\x05W,\x02\xCC\xCD\x05\x87D\x02\xCD\x18\x03\x02"+
		"\x02\x02\xCE\xCF\x05}?\x02\xCF\xD0\x05\x7F@\x02\xD0\xD1\x05_0\x02\xD1"+
		"\xD2\x05{>\x02\xD2\xD3\x05]/\x02\xD3\xD4\x05W,\x02\xD4\xD5\x05\x87D\x02"+
		"\xD5\x1A\x03\x02\x02\x02\xD6\xD7\x05\x83B\x02\xD7\xD8\x05_0\x02\xD8\xD9"+
		"\x05]/\x02\xD9\xDA\x05q9\x02\xDA\xDB\x05_0\x02\xDB\xDC\x05{>\x02\xDC\xDD"+
		"\x05]/\x02\xDD\xDE\x05W,\x02\xDE\xDF\x05\x87D\x02\xDF\x1C\x03\x02\x02"+
		"\x02\xE0\xE1\x05}?\x02\xE1\xE2\x05e3\x02\xE2\xE3\x05\x7F@\x02\xE3\xE4"+
		"\x05y=\x02\xE4\xE5\x05{>\x02\xE5\xE6\x05]/\x02\xE6\xE7\x05W,\x02\xE7\xE8"+
		"\x05\x87D\x02\xE8\x1E\x03\x02\x02\x02\xE9\xEA\x05a1\x02\xEA\xEB\x05y="+
		"\x02\xEB\xEC\x05g4\x02\xEC\xED\x05]/\x02\xED\xEE\x05W,\x02\xEE\xEF\x05"+
		"\x87D\x02\xEF \x03\x02\x02\x02\xF0\xF1\x05{>\x02\xF1\xF2\x05W,\x02\xF2"+
		"\xF3\x05}?\x02\xF3\xF4\x05\x7F@\x02\xF4\xF5\x05y=\x02\xF5\xF6\x05]/\x02"+
		"\xF6\xF7\x05W,\x02\xF7\xF8\x05\x87D\x02\xF8\"\x03\x02\x02\x02\xF9\xFA"+
		"\x05{>\x02\xFA\xFB\x05\x7F@\x02\xFB\xFC\x05q9\x02\xFC\xFD\x05]/\x02\xFD"+
		"\xFE\x05W,\x02\xFE\xFF\x05\x87D\x02\xFF$\x03\x02\x02\x02\u0100\u0101\x05"+
		"[.\x02\u0101\u0102\x05s:\x02\u0102\u0103\x05\x7F@\x02\u0103\u0104\x05"+
		"q9\x02\u0104\u0105\x05}?\x02\u0105&\x03\x02\x02\x02\u0106\u0107\x05o8"+
		"\x02\u0107\u0108\x05W,\x02\u0108\u0109\x05\x85C\x02\u0109(\x03\x02\x02"+
		"\x02\u010A\u010B\x05o8\x02\u010B\u010C\x05g4\x02\u010C\u010D\x05q9\x02"+
		"\u010D*\x03\x02\x02\x02\u010E\u010F\x05{>\x02\u010F\u0110\x05\x7F@\x02"+
		"\u0110\u0111\x05o8\x02\u0111,\x03\x02\x02\x02\u0112\u0113\x05W,\x02\u0113"+
		"\u0114\x05\x81A\x02\u0114\u0115\x05c2\x02\u0115.\x03\x02\x02\x02\u0116"+
		"\u0117\x05W,\x02\u0117\u0118\x05q9\x02\u0118\u0119\x05]/\x02\u01190\x03"+
		"\x02\x02\x02\u011A\u011B\x05s:\x02\u011B\u011C\x05y=\x02\u011C2\x03\x02"+
		"\x02\x02\u011D\u0121\t\x02\x02\x02\u011E\u0120\t\x03\x02\x02\u011F\u011E"+
		"\x03\x02\x02\x02\u0120\u0123\x03\x02\x02\x02\u0121\u011F\x03\x02\x02\x02"+
		"\u0121\u0122\x03\x02\x02\x02\u01224\x03\x02\x02\x02\u0123\u0121\x03\x02"+
		"\x02\x02\u0124\u0126\t\x04\x02\x02\u0125\u0124\x03\x02\x02\x02\u0126\u0127"+
		"\x03\x02\x02\x02\u0127\u0125\x03\x02\x02\x02\u0127\u0128\x03\x02\x02\x02"+
		"\u01286\x03\x02\x02\x02\u0129\u012D\x07)\x02\x02\u012A\u012C\n\x05\x02"+
		"\x02\u012B\u012A\x03\x02\x02\x02\u012C\u012F\x03\x02\x02\x02\u012D\u012B"+
		"\x03\x02\x02\x02\u012D\u012E\x03\x02\x02\x02\u012E\u0130\x03\x02\x02\x02"+
		"\u012F\u012D\x03\x02\x02\x02\u0130\u0131\x07)\x02\x02\u01318\x03\x02\x02"+
		"\x02\u0132\u0133\x07*\x02\x02\u0133:\x03\x02\x02\x02\u0134\u0135\x07+"+
		"\x02\x02\u0135<\x03\x02\x02\x02\u0136\u0137\x07,\x02\x02\u0137>\x03\x02"+
		"\x02\x02\u0138\u0139\x071\x02\x02\u0139@\x03\x02\x02\x02\u013A\u013B\x07"+
		"-\x02\x02\u013BB\x03\x02\x02\x02\u013C\u013D\x07/\x02\x02\u013DD\x03\x02"+
		"\x02\x02\u013E\u013F\x07?\x02\x02\u013FF\x03\x02\x02\x02\u0140\u0141\x07"+
		"#\x02\x02\u0141\u0142\x07?\x02\x02\u0142H\x03\x02\x02\x02\u0143\u0144"+
		"\x07@\x02\x02\u0144J\x03\x02\x02\x02\u0145\u0146\x07@\x02\x02\u0146\u0147"+
		"\x07?\x02\x02\u0147L\x03\x02\x02\x02\u0148\u0149\x07>\x02\x02\u0149N\x03"+
		"\x02\x02\x02\u014A\u014B\x07>\x02\x02\u014B\u014C\x07?\x02\x02\u014CP"+
		"\x03\x02\x02\x02\u014D\u014E\x07.\x02\x02\u014ER\x03\x02\x02\x02\u014F"+
		"\u0150\x07/\x02\x02\u0150\u0151\x07/\x02\x02\u0151\u0155\x03\x02\x02\x02"+
		"\u0152\u0154\n\x06\x02\x02\u0153\u0152\x03\x02\x02\x02\u0154\u0157\x03"+
		"\x02\x02\x02\u0155\u0153\x03\x02\x02\x02\u0155\u0156\x03\x02\x02\x02\u0156"+
		"\u0158\x03\x02\x02\x02\u0157\u0155\x03\x02\x02\x02\u0158\u0159\b*\x02"+
		"\x02\u0159T\x03\x02\x02\x02\u015A\u015B\t\x07\x02\x02\u015B\u015C\x03"+
		"\x02\x02\x02\u015C\u015D\b+\x02\x02\u015DV\x03\x02\x02\x02\u015E\u015F"+
		"\t\b\x02\x02\u015FX\x03\x02\x02\x02\u0160\u0161\t\t\x02\x02\u0161Z\x03"+
		"\x02\x02\x02\u0162\u0163\t\n\x02\x02\u0163\\\x03\x02\x02\x02\u0164\u0165"+
		"\t\v\x02\x02\u0165^\x03\x02\x02\x02\u0166\u0167\t\f\x02\x02\u0167`\x03"+
		"\x02\x02\x02\u0168\u0169\t\r\x02\x02\u0169b\x03\x02\x02\x02\u016A\u016B"+
		"\t\x0E\x02\x02\u016Bd\x03\x02\x02\x02\u016C\u016D\t\x0F\x02\x02\u016D"+
		"f\x03\x02\x02\x02\u016E\u016F\t\x10\x02\x02\u016Fh\x03\x02\x02\x02\u0170"+
		"\u0171\t\x11\x02\x02\u0171j\x03\x02\x02\x02\u0172\u0173\t\x12\x02\x02"+
		"\u0173l\x03\x02\x02\x02\u0174\u0175\t\x13\x02\x02\u0175n\x03\x02\x02\x02"+
		"\u0176\u0177\t\x14\x02\x02\u0177p\x03\x02\x02\x02\u0178\u0179\t\x15\x02"+
		"\x02\u0179r\x03\x02\x02\x02\u017A\u017B\t\x16\x02\x02\u017Bt\x03\x02\x02"+
		"\x02\u017C\u017D\t\x17\x02\x02\u017Dv\x03\x02\x02\x02\u017E\u017F\t\x18"+
		"\x02\x02\u017Fx\x03\x02\x02\x02\u0180\u0181\t\x19\x02\x02\u0181z\x03\x02"+
		"\x02\x02\u0182\u0183\t\x1A\x02\x02\u0183|\x03\x02\x02\x02\u0184\u0185"+
		"\t\x1B\x02\x02\u0185~\x03\x02\x02\x02\u0186\u0187\t\x1C\x02\x02\u0187"+
		"\x80\x03\x02\x02\x02\u0188\u0189\t\x1D\x02\x02\u0189\x82\x03\x02\x02\x02"+
		"\u018A\u018B\t\x1E\x02\x02\u018B\x84\x03\x02\x02\x02\u018C\u018D\t\x1F"+
		"\x02\x02\u018D\x86\x03\x02\x02\x02\u018E\u018F\t \x02\x02\u018F\x88\x03"+
		"\x02\x02\x02\u0190\u0191\t!\x02\x02\u0191\x8A\x03\x02\x02\x02\x07\x02"+
		"\u0121\u0127\u012D\u0155\x03\x02\x03\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!AqlLexer.__ATN) {
			AqlLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(AqlLexer._serializedATN));
		}

		return AqlLexer.__ATN;
	}

}

