// Generated from Aql.g4 by ANTLR 4.6-SNAPSHOT


import { ATN } from 'antlr4ts/atn/ATN';
import { ATNDeserializer } from 'antlr4ts/atn/ATNDeserializer';
import { CharStream } from 'antlr4ts/CharStream';
import { Lexer } from 'antlr4ts/Lexer';
import { LexerATNSimulator } from 'antlr4ts/atn/LexerATNSimulator';
import { NotNull } from 'antlr4ts/Decorators';
import { Override } from 'antlr4ts/Decorators';
import { RuleContext } from 'antlr4ts/RuleContext';
import { Vocabulary } from 'antlr4ts/Vocabulary';
import { VocabularyImpl } from 'antlr4ts/VocabularyImpl';

import * as Utils from 'antlr4ts/misc/Utils';


export class AqlLexer extends Lexer {
	public static readonly SELECT=1;
	public static readonly FROM=2;
	public static readonly SINCE=3;
	public static readonly UNTIL=4;
	public static readonly AT=5;
	public static readonly WHERE=6;
	public static readonly TRUE=7;
	public static readonly FALSE=8;
	public static readonly TODAY=9;
	public static readonly YESTERDAY=10;
	public static readonly MONDAY=11;
	public static readonly TUESDAY=12;
	public static readonly WEDNESDAY=13;
	public static readonly THURSDAY=14;
	public static readonly FRIDAY=15;
	public static readonly SATURDAY=16;
	public static readonly SUNDAY=17;
	public static readonly COUNT=18;
	public static readonly MAX=19;
	public static readonly MIN=20;
	public static readonly SUM=21;
	public static readonly AVG=22;
	public static readonly TIMESERIES=23;
	public static readonly AND=24;
	public static readonly OR=25;
	public static readonly IDENTIFIER=26;
	public static readonly INT=27;
	public static readonly STRING=28;
	public static readonly OPEN_PAREN=29;
	public static readonly CLOSE_PAREN=30;
	public static readonly STAR=31;
	public static readonly DIVIDE=32;
	public static readonly PLUS=33;
	public static readonly MINUS=34;
	public static readonly EQUAL=35;
	public static readonly NOT_EQUAL=36;
	public static readonly GREATER_THAN=37;
	public static readonly GREATER_THAN_EQUALS=38;
	public static readonly LESS_THAN=39;
	public static readonly LESS_THAN_EQUALS=40;
	public static readonly COMMA=41;
	public static readonly COMMENT=42;
	public static readonly WS=43;
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE"
	];

	public static readonly ruleNames: string[] = [
		"SELECT", "FROM", "SINCE", "UNTIL", "AT", "WHERE", "TRUE", "FALSE", "TODAY", 
		"YESTERDAY", "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY", 
		"SUNDAY", "COUNT", "MAX", "MIN", "SUM", "AVG", "TIMESERIES", "AND", "OR", 
		"IDENTIFIER", "INT", "STRING", "OPEN_PAREN", "CLOSE_PAREN", "STAR", "DIVIDE", 
		"PLUS", "MINUS", "EQUAL", "NOT_EQUAL", "GREATER_THAN", "GREATER_THAN_EQUALS", 
		"LESS_THAN", "LESS_THAN_EQUALS", "COMMA", "COMMENT", "WS", "A", "B", "C", 
		"D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", 
		"R", "S", "T", "U", "V", "W", "X", "Y", "Z"
	];

	private static readonly _LITERAL_NAMES: (string | undefined)[] = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		"'true'", "'false'", undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, "'('", "')'", "'*'", "'/'", "'+'", "'-'", "'='", "'!='", "'>'", 
		"'>='", "'<'", "'<='", "','"
	];
	private static readonly _SYMBOLIC_NAMES: (string | undefined)[] = [
		undefined, "SELECT", "FROM", "SINCE", "UNTIL", "AT", "WHERE", "TRUE", 
		"FALSE", "TODAY", "YESTERDAY", "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", 
		"FRIDAY", "SATURDAY", "SUNDAY", "COUNT", "MAX", "MIN", "SUM", "AVG", "TIMESERIES", 
		"AND", "OR", "IDENTIFIER", "INT", "STRING", "OPEN_PAREN", "CLOSE_PAREN", 
		"STAR", "DIVIDE", "PLUS", "MINUS", "EQUAL", "NOT_EQUAL", "GREATER_THAN", 
		"GREATER_THAN_EQUALS", "LESS_THAN", "LESS_THAN_EQUALS", "COMMA", "COMMENT", 
		"WS"
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(AqlLexer._LITERAL_NAMES, AqlLexer._SYMBOLIC_NAMES, []);

	@Override
	@NotNull
	public get vocabulary(): Vocabulary {
		return AqlLexer.VOCABULARY;
	}


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(AqlLexer._ATN, this);
	}

	@Override
	public get grammarFileName(): string { return "Aql.g4"; }

	@Override
	public get ruleNames(): string[] { return AqlLexer.ruleNames; }

	@Override
	public get serializedATN(): string { return AqlLexer._serializedATN; }

	@Override
	public get modeNames(): string[] { return AqlLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uAF6F\u8320\u479D\uB75C\u4880\u1605\u191C\uAB37\x02-\u019F\b\x01"+
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06"+
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r"+
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t"+
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t"+
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t"+
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t"+
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04"+
		"+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x042\t2\x043\t3\x04"+
		"4\t4\x045\t5\x046\t6\x047\t7\x048\t8\x049\t9\x04:\t:\x04;\t;\x04<\t<\x04"+
		"=\t=\x04>\t>\x04?\t?\x04@\t@\x04A\tA\x04B\tB\x04C\tC\x04D\tD\x04E\tE\x04"+
		"F\tF\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03\x03\x03"+
		"\x03\x03\x03\x03\x03\x03\x03\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03"+
		"\x04\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x06\x03\x06\x03"+
		"\x06\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\b\x03\b\x03\b"+
		"\x03\b\x03\b\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\n\x03\n\x03\n\x03"+
		"\n\x03\n\x03\n\x03\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03"+
		"\v\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\r\x03\r\x03\r\x03\r\x03"+
		"\r\x03\r\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03"+
		"\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03"+
		"\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03"+
		"\x10\x03\x10\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03"+
		"\x11\x03\x11\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03"+
		"\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x14\x03\x14\x03\x14\x03"+
		"\x14\x03\x15\x03\x15\x03\x15\x03\x15\x03\x16\x03\x16\x03\x16\x03\x16\x03"+
		"\x17\x03\x17\x03\x17\x03\x17\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03"+
		"\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x19\x03\x19\x03\x19\x03"+
		"\x19\x03\x1A\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x07\x1B\u012D\n\x1B\f\x1B"+
		"\x0E\x1B\u0130\v\x1B\x03\x1C\x06\x1C\u0133\n\x1C\r\x1C\x0E\x1C\u0134\x03"+
		"\x1D\x03\x1D\x07\x1D\u0139\n\x1D\f\x1D\x0E\x1D\u013C\v\x1D\x03\x1D\x03"+
		"\x1D\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03 \x03 \x03!\x03!\x03\"\x03\"\x03"+
		"#\x03#\x03$\x03$\x03%\x03%\x03%\x03&\x03&\x03\'\x03\'\x03\'\x03(\x03("+
		"\x03)\x03)\x03)\x03*\x03*\x03+\x03+\x03+\x03+\x07+\u0161\n+\f+\x0E+\u0164"+
		"\v+\x03+\x03+\x03,\x03,\x03,\x03,\x03-\x03-\x03.\x03.\x03/\x03/\x030\x03"+
		"0\x031\x031\x032\x032\x033\x033\x034\x034\x035\x035\x036\x036\x037\x03"+
		"7\x038\x038\x039\x039\x03:\x03:\x03;\x03;\x03<\x03<\x03=\x03=\x03>\x03"+
		">\x03?\x03?\x03@\x03@\x03A\x03A\x03B\x03B\x03C\x03C\x03D\x03D\x03E\x03"+
		"E\x03F\x03F\x02\x02\x02G\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06"+
		"\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19"+
		"\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14"+
		"\'\x02\x15)\x02\x16+\x02\x17-\x02\x18/\x02\x191\x02\x1A3\x02\x1B5\x02"+
		"\x1C7\x02\x1D9\x02\x1E;\x02\x1F=\x02 ?\x02!A\x02\"C\x02#E\x02$G\x02%I"+
		"\x02&K\x02\'M\x02(O\x02)Q\x02*S\x02+U\x02,W\x02-Y\x02\x02[\x02\x02]\x02"+
		"\x02_\x02\x02a\x02\x02c\x02\x02e\x02\x02g\x02\x02i\x02\x02k\x02\x02m\x02"+
		"\x02o\x02\x02q\x02\x02s\x02\x02u\x02\x02w\x02\x02y\x02\x02{\x02\x02}\x02"+
		"\x02\x7F\x02\x02\x81\x02\x02\x83\x02\x02\x85\x02\x02\x87\x02\x02\x89\x02"+
		"\x02\x8B\x02\x02\x03\x02\"\x04\x02C\\c|\x06\x022;C\\aac|\x03\x022;\x05"+
		"\x02\f\f\x0F\x0F))\x04\x02\f\f\x0F\x0F\x04\x02\v\f\"\"\x04\x02CCcc\x04"+
		"\x02DDdd\x04\x02EEee\x04\x02FFff\x04\x02GGgg\x04\x02HHhh\x04\x02IIii\x04"+
		"\x02JJjj\x04\x02KKkk\x04\x02LLll\x04\x02MMmm\x04\x02NNnn\x04\x02OOoo\x04"+
		"\x02PPpp\x04\x02QQqq\x04\x02RRrr\x04\x02SSss\x04\x02TTtt\x04\x02UUuu\x04"+
		"\x02VVvv\x04\x02WWww\x04\x02XXxx\x04\x02YYyy\x04\x02ZZzz\x04\x02[[{{\x04"+
		"\x02\\\\||\u0188\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07"+
		"\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03"+
		"\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03"+
		"\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03"+
		"\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03"+
		"\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02"+
		"\x02\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02"+
		"-\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02"+
		"\x02\x02\x025\x03\x02\x02\x02\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02"+
		"\x02;\x03\x02\x02\x02\x02=\x03\x02\x02\x02\x02?\x03\x02\x02\x02\x02A\x03"+
		"\x02\x02\x02\x02C\x03\x02\x02\x02\x02E\x03\x02\x02\x02\x02G\x03\x02\x02"+
		"\x02\x02I\x03\x02\x02\x02\x02K\x03\x02\x02\x02\x02M\x03\x02\x02\x02\x02"+
		"O\x03\x02\x02\x02\x02Q\x03\x02\x02\x02\x02S\x03\x02\x02\x02\x02U\x03\x02"+
		"\x02\x02\x02W\x03\x02\x02\x02\x03\x8D\x03\x02\x02\x02\x05\x94\x03\x02"+
		"\x02\x02\x07\x99\x03\x02\x02\x02\t\x9F\x03\x02\x02\x02\v\xA5\x03\x02\x02"+
		"\x02\r\xA8\x03\x02\x02\x02\x0F\xAE\x03\x02\x02\x02\x11\xB3\x03\x02\x02"+
		"\x02\x13\xB9\x03\x02\x02\x02\x15\xBF\x03\x02\x02\x02\x17\xC9\x03\x02\x02"+
		"\x02\x19\xD0\x03\x02\x02\x02\x1B\xD8\x03\x02\x02\x02\x1D\xE2\x03\x02\x02"+
		"\x02\x1F\xEB\x03\x02\x02\x02!\xF2\x03\x02\x02\x02#\xFB\x03\x02\x02\x02"+
		"%\u0102\x03\x02\x02\x02\'\u0108\x03\x02\x02\x02)\u010C\x03\x02\x02\x02"+
		"+\u0110\x03\x02\x02\x02-\u0114\x03\x02\x02\x02/\u0118\x03\x02\x02\x02"+
		"1\u0123\x03\x02\x02\x023\u0127\x03\x02\x02\x025\u012A\x03\x02\x02\x02"+
		"7\u0132\x03\x02\x02\x029\u0136\x03\x02\x02\x02;\u013F\x03\x02\x02\x02"+
		"=\u0141\x03\x02\x02\x02?\u0143\x03\x02\x02\x02A\u0145\x03\x02\x02\x02"+
		"C\u0147\x03\x02\x02\x02E\u0149\x03\x02\x02\x02G\u014B\x03\x02\x02\x02"+
		"I\u014D\x03\x02\x02\x02K\u0150\x03\x02\x02\x02M\u0152\x03\x02\x02\x02"+
		"O\u0155\x03\x02\x02\x02Q\u0157\x03\x02\x02\x02S\u015A\x03\x02\x02\x02"+
		"U\u015C\x03\x02\x02\x02W\u0167\x03\x02\x02\x02Y\u016B\x03\x02\x02\x02"+
		"[\u016D\x03\x02\x02\x02]\u016F\x03\x02\x02\x02_\u0171\x03\x02\x02\x02"+
		"a\u0173\x03\x02\x02\x02c\u0175\x03\x02\x02\x02e\u0177\x03\x02\x02\x02"+
		"g\u0179\x03\x02\x02\x02i\u017B\x03\x02\x02\x02k\u017D\x03\x02\x02\x02"+
		"m\u017F\x03\x02\x02\x02o\u0181\x03\x02\x02\x02q\u0183\x03\x02\x02\x02"+
		"s\u0185\x03\x02\x02\x02u\u0187\x03\x02\x02\x02w\u0189\x03\x02\x02\x02"+
		"y\u018B\x03\x02\x02\x02{\u018D\x03\x02\x02\x02}\u018F\x03\x02\x02\x02"+
		"\x7F\u0191\x03\x02\x02\x02\x81\u0193\x03\x02\x02\x02\x83\u0195\x03\x02"+
		"\x02\x02\x85\u0197\x03\x02\x02\x02\x87\u0199\x03\x02\x02\x02\x89\u019B"+
		"\x03\x02\x02\x02\x8B\u019D\x03\x02\x02\x02\x8D\x8E\x05}?\x02\x8E\x8F\x05"+
		"a1\x02\x8F\x90\x05o8\x02\x90\x91\x05a1\x02\x91\x92\x05]/\x02\x92\x93\x05"+
		"\x7F@\x02\x93\x04\x03\x02\x02\x02\x94\x95\x05c2\x02\x95\x96\x05{>\x02"+
		"\x96\x97\x05u;\x02\x97\x98\x05q9\x02\x98\x06\x03\x02\x02\x02\x99\x9A\x05"+
		"}?\x02\x9A\x9B\x05i5\x02\x9B\x9C\x05s:\x02\x9C\x9D\x05]/\x02\x9D\x9E\x05"+
		"a1\x02\x9E\b\x03\x02\x02\x02\x9F\xA0\x05\x81A\x02\xA0\xA1\x05s:\x02\xA1"+
		"\xA2\x05\x7F@\x02\xA2\xA3\x05i5\x02\xA3\xA4\x05o8\x02\xA4\n\x03\x02\x02"+
		"\x02\xA5\xA6\x05Y-\x02\xA6\xA7\x05\x7F@\x02\xA7\f\x03\x02\x02\x02\xA8"+
		"\xA9\x05\x85C\x02\xA9\xAA\x05g4\x02\xAA\xAB\x05a1\x02\xAB\xAC\x05{>\x02"+
		"\xAC\xAD\x05a1\x02\xAD\x0E\x03\x02\x02\x02\xAE\xAF\x07v\x02\x02\xAF\xB0"+
		"\x07t\x02\x02\xB0\xB1\x07w\x02\x02\xB1\xB2\x07g\x02\x02\xB2\x10\x03\x02"+
		"\x02\x02\xB3\xB4\x07h\x02\x02\xB4\xB5\x07c\x02\x02\xB5\xB6\x07n\x02\x02"+
		"\xB6\xB7\x07u\x02\x02\xB7\xB8\x07g\x02\x02\xB8\x12\x03\x02\x02\x02\xB9"+
		"\xBA\x05\x7F@\x02\xBA\xBB\x05u;\x02\xBB\xBC\x05_0\x02\xBC\xBD\x05Y-\x02"+
		"\xBD\xBE\x05\x89E\x02\xBE\x14\x03\x02\x02\x02\xBF\xC0\x05\x89E\x02\xC0"+
		"\xC1\x05a1\x02\xC1\xC2\x05}?\x02\xC2\xC3\x05\x7F@\x02\xC3\xC4\x05a1\x02"+
		"\xC4\xC5\x05{>\x02\xC5\xC6\x05_0\x02\xC6\xC7\x05Y-\x02\xC7\xC8\x05\x89"+
		"E\x02\xC8\x16\x03\x02\x02\x02\xC9\xCA\x05q9\x02\xCA\xCB\x05u;\x02\xCB"+
		"\xCC\x05s:\x02\xCC\xCD\x05_0\x02\xCD\xCE\x05Y-\x02\xCE\xCF\x05\x89E\x02"+
		"\xCF\x18\x03\x02\x02\x02\xD0\xD1\x05\x7F@\x02\xD1\xD2\x05\x81A\x02\xD2"+
		"\xD3\x05a1\x02\xD3\xD4\x05}?\x02\xD4\xD5\x05_0\x02\xD5\xD6\x05Y-\x02\xD6"+
		"\xD7\x05\x89E\x02\xD7\x1A\x03\x02\x02\x02\xD8\xD9\x05\x85C\x02\xD9\xDA"+
		"\x05a1\x02\xDA\xDB\x05_0\x02\xDB\xDC\x05s:\x02\xDC\xDD\x05a1\x02\xDD\xDE"+
		"\x05}?\x02\xDE\xDF\x05_0\x02\xDF\xE0\x05Y-\x02\xE0\xE1\x05\x89E\x02\xE1"+
		"\x1C\x03\x02\x02\x02\xE2\xE3\x05\x7F@\x02\xE3\xE4\x05g4\x02\xE4\xE5\x05"+
		"\x81A\x02\xE5\xE6\x05{>\x02\xE6\xE7\x05}?\x02\xE7\xE8\x05_0\x02\xE8\xE9"+
		"\x05Y-\x02\xE9\xEA\x05\x89E\x02\xEA\x1E\x03\x02\x02\x02\xEB\xEC\x05c2"+
		"\x02\xEC\xED\x05{>\x02\xED\xEE\x05i5\x02\xEE\xEF\x05_0\x02\xEF\xF0\x05"+
		"Y-\x02\xF0\xF1\x05\x89E\x02\xF1 \x03\x02\x02\x02\xF2\xF3\x05}?\x02\xF3"+
		"\xF4\x05Y-\x02\xF4\xF5\x05\x7F@\x02\xF5\xF6\x05\x81A\x02\xF6\xF7\x05{"+
		">\x02\xF7\xF8\x05_0\x02\xF8\xF9\x05Y-\x02\xF9\xFA\x05\x89E\x02\xFA\"\x03"+
		"\x02\x02\x02\xFB\xFC\x05}?\x02\xFC\xFD\x05\x81A\x02\xFD\xFE\x05s:\x02"+
		"\xFE\xFF\x05_0\x02\xFF\u0100\x05Y-\x02\u0100\u0101\x05\x89E\x02\u0101"+
		"$\x03\x02\x02\x02\u0102\u0103\x05]/\x02\u0103\u0104\x05u;\x02\u0104\u0105"+
		"\x05\x81A\x02\u0105\u0106\x05s:\x02\u0106\u0107\x05\x7F@\x02\u0107&\x03"+
		"\x02\x02\x02\u0108\u0109\x05q9\x02\u0109\u010A\x05Y-\x02\u010A\u010B\x05"+
		"\x87D\x02\u010B(\x03\x02\x02\x02\u010C\u010D\x05q9\x02\u010D\u010E\x05"+
		"i5\x02\u010E\u010F\x05s:\x02\u010F*\x03\x02\x02\x02\u0110\u0111\x05}?"+
		"\x02\u0111\u0112\x05\x81A\x02\u0112\u0113\x05q9\x02\u0113,\x03\x02\x02"+
		"\x02\u0114\u0115\x05Y-\x02\u0115\u0116\x05\x83B\x02\u0116\u0117\x05e3"+
		"\x02\u0117.\x03\x02\x02\x02\u0118\u0119\x05\x7F@\x02\u0119\u011A\x05i"+
		"5\x02\u011A\u011B\x05q9\x02\u011B\u011C\x05a1\x02\u011C\u011D\x05}?\x02"+
		"\u011D\u011E\x05a1\x02\u011E\u011F\x05{>\x02\u011F\u0120\x05i5\x02\u0120"+
		"\u0121\x05a1\x02\u0121\u0122\x05}?\x02\u01220\x03\x02\x02\x02\u0123\u0124"+
		"\x05Y-\x02\u0124\u0125\x05s:\x02\u0125\u0126\x05_0\x02\u01262\x03\x02"+
		"\x02\x02\u0127\u0128\x05u;\x02\u0128\u0129\x05{>\x02\u01294\x03\x02\x02"+
		"\x02\u012A\u012E\t\x02\x02\x02\u012B\u012D\t\x03\x02\x02\u012C\u012B\x03"+
		"\x02\x02\x02\u012D\u0130\x03\x02\x02\x02\u012E\u012C\x03\x02\x02\x02\u012E"+
		"\u012F\x03\x02\x02\x02\u012F6\x03\x02\x02\x02\u0130\u012E\x03\x02\x02"+
		"\x02\u0131\u0133\t\x04\x02\x02\u0132\u0131\x03\x02\x02\x02\u0133\u0134"+
		"\x03\x02\x02\x02\u0134\u0132\x03\x02\x02\x02\u0134\u0135\x03\x02\x02\x02"+
		"\u01358\x03\x02\x02\x02\u0136\u013A\x07)\x02\x02\u0137\u0139\n\x05\x02"+
		"\x02\u0138\u0137\x03\x02\x02\x02\u0139\u013C\x03\x02\x02\x02\u013A\u0138"+
		"\x03\x02\x02\x02\u013A\u013B\x03\x02\x02\x02\u013B\u013D\x03\x02\x02\x02"+
		"\u013C\u013A\x03\x02\x02\x02\u013D\u013E\x07)\x02\x02\u013E:\x03\x02\x02"+
		"\x02\u013F\u0140\x07*\x02\x02\u0140<\x03\x02\x02\x02\u0141\u0142\x07+"+
		"\x02\x02\u0142>\x03\x02\x02\x02\u0143\u0144\x07,\x02\x02\u0144@\x03\x02"+
		"\x02\x02\u0145\u0146\x071\x02\x02\u0146B\x03\x02\x02\x02\u0147\u0148\x07"+
		"-\x02\x02\u0148D\x03\x02\x02\x02\u0149\u014A\x07/\x02\x02\u014AF\x03\x02"+
		"\x02\x02\u014B\u014C\x07?\x02\x02\u014CH\x03\x02\x02\x02\u014D\u014E\x07"+
		"#\x02\x02\u014E\u014F\x07?\x02\x02\u014FJ\x03\x02\x02\x02\u0150\u0151"+
		"\x07@\x02\x02\u0151L\x03\x02\x02\x02\u0152\u0153\x07@\x02\x02\u0153\u0154"+
		"\x07?\x02\x02\u0154N\x03\x02\x02\x02\u0155\u0156\x07>\x02\x02\u0156P\x03"+
		"\x02\x02\x02\u0157\u0158\x07>\x02\x02\u0158\u0159\x07?\x02\x02\u0159R"+
		"\x03\x02\x02\x02\u015A\u015B\x07.\x02\x02\u015BT\x03\x02\x02\x02\u015C"+
		"\u015D\x07/\x02\x02\u015D\u015E\x07/\x02\x02\u015E\u0162\x03\x02\x02\x02"+
		"\u015F\u0161\n\x06\x02\x02\u0160\u015F\x03\x02\x02\x02\u0161\u0164\x03"+
		"\x02\x02\x02\u0162\u0160\x03\x02\x02\x02\u0162\u0163\x03\x02\x02\x02\u0163"+
		"\u0165\x03\x02\x02\x02\u0164\u0162\x03\x02\x02\x02\u0165\u0166\b+\x02"+
		"\x02\u0166V\x03\x02\x02\x02\u0167\u0168\t\x07\x02\x02\u0168\u0169\x03"+
		"\x02\x02\x02\u0169\u016A\b,\x02\x02\u016AX\x03\x02\x02\x02\u016B\u016C"+
		"\t\b\x02\x02\u016CZ\x03\x02\x02\x02\u016D\u016E\t\t\x02\x02\u016E\\\x03"+
		"\x02\x02\x02\u016F\u0170\t\n\x02\x02\u0170^\x03\x02\x02\x02\u0171\u0172"+
		"\t\v\x02\x02\u0172`\x03\x02\x02\x02\u0173\u0174\t\f\x02\x02\u0174b\x03"+
		"\x02\x02\x02\u0175\u0176\t\r\x02\x02\u0176d\x03\x02\x02\x02\u0177\u0178"+
		"\t\x0E\x02\x02\u0178f\x03\x02\x02\x02\u0179\u017A\t\x0F\x02\x02\u017A"+
		"h\x03\x02\x02\x02\u017B\u017C\t\x10\x02\x02\u017Cj\x03\x02\x02\x02\u017D"+
		"\u017E\t\x11\x02\x02\u017El\x03\x02\x02\x02\u017F\u0180\t\x12\x02\x02"+
		"\u0180n\x03\x02\x02\x02\u0181\u0182\t\x13\x02\x02\u0182p\x03\x02\x02\x02"+
		"\u0183\u0184\t\x14\x02\x02\u0184r\x03\x02\x02\x02\u0185\u0186\t\x15\x02"+
		"\x02\u0186t\x03\x02\x02\x02\u0187\u0188\t\x16\x02\x02\u0188v\x03\x02\x02"+
		"\x02\u0189\u018A\t\x17\x02\x02\u018Ax\x03\x02\x02\x02\u018B\u018C\t\x18"+
		"\x02\x02\u018Cz\x03\x02\x02\x02\u018D\u018E\t\x19\x02\x02\u018E|\x03\x02"+
		"\x02\x02\u018F\u0190\t\x1A\x02\x02\u0190~\x03\x02\x02\x02\u0191\u0192"+
		"\t\x1B\x02\x02\u0192\x80\x03\x02\x02\x02\u0193\u0194\t\x1C\x02\x02\u0194"+
		"\x82\x03\x02\x02\x02\u0195\u0196\t\x1D\x02\x02\u0196\x84\x03\x02\x02\x02"+
		"\u0197\u0198\t\x1E\x02\x02\u0198\x86\x03\x02\x02\x02\u0199\u019A\t\x1F"+
		"\x02\x02\u019A\x88\x03\x02\x02\x02\u019B\u019C\t \x02\x02\u019C\x8A\x03"+
		"\x02\x02\x02\u019D\u019E\t!\x02\x02\u019E\x8C\x03\x02\x02\x02\x07\x02"+
		"\u012E\u0134\u013A\u0162\x03\x02\x03\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!AqlLexer.__ATN) {
			AqlLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(AqlLexer._serializedATN));
		}

		return AqlLexer.__ATN;
	}

}

